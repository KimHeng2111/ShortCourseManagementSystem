<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGiAAAAEAIACoDQAAFgAAACgAAAAaAAAAQAAAAAEAIAAAAAAAAA0AANQhAADUIQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEUKAgAAAAAAkVdKE7GNlVbErsG+v6W1n6h+
        fTh9OScIt3JfAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAZCERADcAAAGaZl0Wso2UScCmtYnPvM7I4NTm9PLs9f/s5fH+2cve6MmzxK65mqNnp3t4KHo4
        JQawaFEAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaCIHAP///wCmeHIiwKWyf9C9
        0tHf0+P37OTs//Hs8P/49fH///rz//748v/y7+//8Orw/+bb6P3YyNrlyLHCq7SQlVKRWEYMsHpuAAMA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJJYQgBpFAACtpSYU8+8zdXk2+L/4ObP/6nKmP92qLv/bqPM/424
        2P+nw9j/nb/Y/3aq0f9xpcv/ibWt/8rdsf/p5eH/3M/e98ewv6+thYAv////AGIaBwAAAAAAAAAAAAAA
        AAB4NyMA////ALman1vbyt3t5uTY/6rPeP+VxFf/j7ts/4y2qP9wpMv/Y6DO/2qk0P9opND/XprG/4qy
        yf+As33/nsdu/5PDVP/K3an/6+Ho/865zNauhoM70r7HAFEOBwAAAAAAAAAAALqYlgCsg38v08DQ3t7f
        xv+00YD/rM56/8fZnf/k5sX//PDg/+/p4//E093/mL3U/6nF1//b3+D//PDl//Dr0v/b4rn/rs57/7DP
        ff/F2Zj/6d/f/824x8eicmYcrYF4AAAAAAB/PDEAMgAAA8KntZnl2tr/u9SL/5/GZf/p5sn//O7g//7u
        4//87uH//u/h//Pq3v99sLv/s8vK///v4f/97uD//e7h//7u4//37Nr/ytmf/5vEX//c4bj/5dbh/76h
        p3v///8AaR4RAK6EfQCofHgn1sHQ48zWov+exF//3d+4//3r3f/869v//Ovb//zr2//25db/rdHY/0qv
        z/9iudT/2NzY//ro2P/869v//Ovb//3r3P/26dX/wdSR/6PHZP/n3s3/z7rJy5hgTxOaYVYAyrbCALiX
        oFjezdD9tM19/7rOhP/35tH/++jW//vo1v/76Nb/++jW/9TKwP+0vsH/kaCk/52ssv++v7//69vL//zp
        1//76Nb/++jW//3p2P/h3rX/qchu/9bZq//XwM/sonNvLqZ3bQDp7f8Avp2qetnPwP+bwlj/1tej//3m
        0//75dH/++XR//vl0f/85dH/7tzM/9XLxP+Tk57/qqan/+LWzP/44s//++XR//vl0f/75dH/++XR//jk
        zv+vyXL/vc6G/9W+yu+hcm8xp3huAPL7/wDGqrmC18+2/67Ib//r3rv//OPP//vjzv/7487/++PO//vj
        zv/85M///OPO/5264P/O0Nb//uXO//vjzv/7487/++PO//vjzv/7487/++PO/87TmP+6zID/1LzH76Fy
        cDGnd24A6u7/AMuzx4LPy6z/osNe//Devv/84s3/++LM//vizP/74sz/++LM//vizP/q4dD/gq7o/63J
        3v/15M3/++LM//vizP/74sz/++LM//vizP/948//zdKU/6fFaP/Qu8HvonJxMad3bgDq7v8Ay7LGgs7L
        q/+ux23/9d/F//rhyv/64cr/+uHK//rhyv/74cr/8uLM/6rW2/9BpfL/X7Pr/87i1P/54cr/+uHK//rh
        yv/64cr/+uHK//zizP/b1qX/rMZv/9C6we+icnExp3duAOvw/wDLssWD1Muw/73MgP/438X/+t/H//rf
        x//638f/+t/H//vfx//r4cv/o97b/0DF8v9ey+v/xePU//ffyP/638f/+t/H//rfx//638f/+9/I/+LY
        rP+5yn7/0brA76JycTGnd24A////AMetvofm0sD/2dab//7hxP/94MT//uHE//3gxP/94MT//uHE//rh
        xf/L5ND/lN7d/6ng2P/j4sr//eDE//3gxP/94MT//eDE//3gxP/+4cX/8964/97XpP/XvMTvoHJwMad3
        bgD///8As5mwkqie0v+lncz/qZ/P/7Sp0P+sotD/vbHS/7mt0f+pn8//qqDP/6+q0v+rs9f/tbXV/8C0
        0v/BtdL/wLTS/7ar0f+9sdL/wLTS/7Cl0P+nnc7/pZ3P/66eyO+oeG8xp3duAL///wCbiKuYNEfk/xkw
        5f8kOuT/ipTs/2997f+rs/T/n6jz/yE35v8rQOb/lp/x/36K7/+qsfT/l6Hz/4WQ8f+PmvL/qrH0/661
        9P96h+//f4vw/yA25v8ZMeb/am7R77OCbTGnd24Axf//AJuHqpg0R+T/GTDl/yU75P+or+7/sbj0/4eS
        8P+7wfb/doPv/2V07P+psfT/KT/m/4qV8f9QYev/NUnn/36L7/+0u/T/tLrz/3SC7/+KlfH/ITfm/xkx
        5v9qbtHvs4JtMad3bgDA//8AmoermDJH5v8XMOf/Izvm/6Wu8P9oeO//u8L3/73E9/9se+//u8L3/7nA
        9/9CV+v/nqn0/2t78P+eqPX/oav1/11u7f+psvT/dYTw/4GO8v8aM+f/FzHo/2lu0u+0gm0xp3duAP//
        /wCgiaSYSkzJ/zI2xv84O8X/gn7M/4mE0P97d83/j4nP/4eCz/+Lhs//oJjS/4N/zv+fmNL/mJLR/4eD
        z/+TjND/jIfP/42Iz/+Mh8//ZmXL/zQ4xv8zN8f/eHG/77KCbzGnd24A////ALqPgpiyZUX/rFUy/65a
        Of+pUS7/qVIv/6hRL/+pUS//qVIv/6lRL/+pUi//qlIv/6lRL/+pUi//qVIv/6lTMf+qUzD/qVIv/6pS
        L/+pUjD/q1Qv/6tTL/+7gWvvqoB4Mad3bgD///8AvpB+mL9nNP/Dbjv/y39S/8p9UP/GdUT/yXtN/8h5
        Sv/Je0z/yXtN/8d1Rf/IeEn/yHlK/8d3SP/Hdkb/yHlK/8l7Tf/Hdkf/yXtN/8Z1Rf/KfVD/vmAp/8OC
        YO+pgHkxp3duAP///wC+kH+Yvmc1/8FrOP/Lg1n/zopi/8l+Uv/JflL/yHpN/8p/VP/IfE//yoBU/8yF
        W//IfE//xndJ/8d5S//Iek3/yHxP/8l+Uv/Nh1//x3hK/8qAVf+9YCn/woJg76mAeTGnd24A////AL6Q
        f5i+aDb/uFUc/7xfKf/AZzT/w28+/71hK//BaTf/vWEr/7xfKP+8Xyn/v2Uw/8FqN/+8XSf/wGg1/8Bn
        NP+7XSb/vmMu/79nM/+8Xif/ulgg/7lXHf/Dg2HvqYB5Mad3bgD///8AvpB/mL5oNv+4VRz/vF8p/8qB
        Vv/PjGX/zYdf/8+MZf/KgFX/zYde/86JYf/MhVv/zolh/82HX//Pi2T/zohg/82IYP/NiGD/zIVc/8uC
        WP+8XSf/uVYd/8ODYe+pgHkxp3duAP///wC+j36Yv2c0/7lUGf/AZS//yHdI/8JoM//BZzL/wWcy/8Fn
        Mv/BZTD/wmg0/8JpNf/CaDT/w2o2/8JpNv/CaTX/w2o3/8FnMv/BZzP/wWYw/7tZIP+6VRv/w4Jg76mA
        eTGnd24A////ALmShpiqcFL/oWA9/6NjQf+jY0D/oWA8/6FgPf+iYD3/oWA9/6JgPf+iYDz/omA8/6Jg
        PP+hYDz/omA8/6JgPP+hYDz/omA9/6JgPf+iYD3/omE+/6JhPf+2iXTvq394Mad4bgD///8Aq5GQhpWg
        sOaMm67ijZuu4o2bruKNm67ijZuu4o2bruKNm67ijZuu4o2bruKNm67ijZuu4o2bruKNm67ijZuu4o2b
        ruKNm67ijZuu4o2bruKNm67ijZyv46SgqNOkb2IqoGxhAOXLwwCTUkMSqWxcIaxuXiCsbl4grG5eIKxu
        XiCsbl4grG5eIKxuXiCsbl4grG5eIKxuXiCsbl4grG5eIKxuXiCsbl4grG5eIKxuXiCsbl4grG5eIKxu
        XiCsb18goGJSHYI8LAWEPS0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/8D/wPwAH8D4AAfA4AADwOAAAcDAAADAgAAAwIAA
        AECAAABAgAAAQIAAAECAAABAgAAAQIAAAECAAABAgAAAQIAAAECAAABAgAAAQIAAAECAAABAgAAAQIAA
        AECAAABAgAAAQIAAAECAAABAgAAAQIAAAED////A////wP///8A=
</value>
  </data>
</root>